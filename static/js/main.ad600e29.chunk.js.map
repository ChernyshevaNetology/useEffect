{"version":3,"sources":["components/UserList.tsx","components/UserCard.tsx","App.tsx","index.tsx"],"names":["UserList","React","memo","users","getActiveUser","currentId","List","map","name","id","ListItem","style","cursor","selected","onClick","UserCard","avatar","details","city","position","company","Card","CardActionArea","maxWidth","CardMedia","height","image","CardContent","Typography","gutterBottom","variant","component","color","App","useState","setUsers","setCurrentId","setDetails","getUsers","a","fetch","then","res","json","data","useEffect","getUserInfo","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA8BeA,EAnBEC,IAAMC,MACrB,YAA0D,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,UACvB,OACE,cAACC,EAAA,EAAD,UACGH,EAAMI,KAAkB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACvB,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,WACjBC,SAAUJ,IAAOJ,EACjBS,QAAS,kBAAMV,EAAcK,IAH/B,SAMGD,GAFIC,W,wCCmBFM,EA/BEd,IAAMC,MACrB,YAKqB,IAJnBO,EAIkB,EAJlBA,GACAD,EAGkB,EAHlBA,KACAQ,EAEkB,EAFlBA,OAEkB,IADlBC,QAAWC,EACO,EADPA,KAAMC,EACC,EADDA,SAAUC,EACT,EADSA,QAE3B,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAgBX,MAAO,CAAEY,SAAU,SAAnC,UACE,cAACC,EAAA,EAAD,CAAWb,MAAO,CAAEc,OAAQ,SAAWC,MAAOV,IAC9C,eAACW,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGvB,IAEH,cAACoB,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACGb,IAEH,cAACU,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACGX,IAEH,cAACQ,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACGZ,WAdEV,MCqCFwB,EA3CH,WAAO,IAAD,EACUC,mBAAkB,IAD5B,mBACT/B,EADS,KACFgC,EADE,OAEkBD,mBAAwB,MAF1C,mBAET7B,EAFS,KAEE+B,EAFF,OAGcF,mBAA8B,MAH5C,mBAGTjB,EAHS,KAGAoB,EAHA,KAKVC,EAAQ,uCAAG,sBAAAC,EAAA,sDACfC,MATF,kHAUKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAmBT,EAASS,MAHrB,2CAAH,qDAMdC,qBAAU,WACRP,MACC,CAACnC,IAEJ,IAAM2C,EAAW,uCAAG,WAAOrC,GAAP,SAAA8B,EAAA,sDAClBC,MAAM,GAAD,OAlBQ,wGAkBR,OAAkB/B,EAAlB,UACFgC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAwBP,EAAWO,MAHzB,2CAAH,sDAgBjB,OANAC,qBAAU,WACU,OAAdxC,GACFyC,EAAYzC,KAEb,CAACA,IAGF,sBAAK0C,UAAU,YAAf,UACE,cAAC,EAAD,CACE5C,MAAOA,EACPC,cAdgB,SAACK,GACrB2B,EAAa3B,IAcTJ,UAAWA,IAEZY,GAAW,cAAC,EAAD,eAAcA,QC3ChC+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ad600e29.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { IUser } from \"../types\";\n\ninterface iUserListProps {\n  users: IUser[];\n  getActiveUser: (id: number) => void;\n  currentId: number | null;\n}\n\nconst UserList = React.memo(\n  ({ users, getActiveUser, currentId }: iUserListProps) => {\n    return (\n      <List>\n        {users.map<ReactElement>(({ name, id }: IUser) => (\n          <ListItem\n            style={{ cursor: \"pointer\" }}\n            selected={id === currentId}\n            onClick={() => getActiveUser(id)}\n            key={id}\n          >\n            {name}\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n);\n\nexport default UserList;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IUserDetails } from \"../types\";\n\nconst UserCard = React.memo(\n  ({\n    id,\n    name,\n    avatar,\n    details: { city, position, company },\n  }: IUserDetails) => {\n    return (\n      <Card key={id}>\n        <CardActionArea style={{ maxWidth: \"360px\" }}>\n          <CardMedia style={{ height: \"140px\" }} image={avatar} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {city}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {company}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {position}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    );\n  }\n);\n\nexport default UserCard;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { IUser, IUserDetails } from \"./types\";\nimport UserList from \"components/UserList\";\nimport UserCard from \"components/UserCard\";\n\nconst API =\n  \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/users.json\";\nconst API_DETAILS = `https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/`;\n\nconst App = () => {\n  const [users, setUsers] = useState<IUser[]>([]);\n  const [currentId, setCurrentId] = useState<number | null>(null);\n  const [details, setDetails] = useState<IUserDetails | null>(null);\n\n  const getUsers = async (): Promise<void> => {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data: IUser[]) => setUsers(data));\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, [users]);\n\n  const getUserInfo = async (id: number): Promise<void> => {\n    fetch(`${API_DETAILS}${id}.json`)\n      .then((res) => res.json())\n      .then((data: IUserDetails) => setDetails(data));\n  };\n\n  const getActiveUser = (id: number): void => {\n    setCurrentId(id);\n  };\n\n  useEffect(() => {\n    if (currentId !== null) {\n      getUserInfo(currentId);\n    }\n  }, [currentId]);\n\n  return (\n    <div className=\"container\">\n      <UserList\n        users={users}\n        getActiveUser={getActiveUser}\n        currentId={currentId}\n      />\n      {details && <UserCard {...details} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}